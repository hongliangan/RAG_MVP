// 简单i18n字典
const i18nDict = {
  zh: {
    title: '系统设置',
    backHome: '返回首页',
    globalParams: '全局参数',
    llmProvider: 'LLM服务提供商',
    apiKey: 'API Key',
    modelName: '模型名',
    apiUrl: 'API地址',
    localModelDir: '本地模型目录',
    preferLocalModel: '优先本地模型',
    save: '保存设置',
    restore: '恢复已保存',
    reset: '恢复默认',
    configLoaded: '已加载当前配置',
    saveSuccess: '保存成功',
    saveFail: '保存失败',
    paramInvalid: '参数校验失败：',
    langSwitch: 'English',
    uploading: '正在添加文档...',
    uploadSuccess: '文档添加成功！文档ID: {id}',
    uploadFail: '添加失败: {error}',
    requestFail: '请求失败: {error}',
    delConfirm: '确定要删除这个文档吗？',
    delSuccess: '文档删除成功！',
    delFail: '删除失败: {error}',
    searchEmpty: '请输入搜索查询',
    searching: '正在搜索...',
    searchFail: '搜索失败: {error}',
    noResult: '未找到相关结果',
    noExport: '没有可导出的搜索结果',
    exportSuccess: '结果已导出到: {file}',
    exportFail: '导出失败: {error}',
    loading: '处理中...',
    addSuccess: '文档添加成功！',
    clearConfirm: '确定要清空整个知识库吗？此操作不可恢复！',
    clearing: '正在清空知识库...',
    clearSuccess: '知识库已清空！',
    clearFail: '清空失败: {error}',
    historyFail: '加载历史失败: {error}',
    noHistory: '暂无搜索历史',
    searchHistory: '搜索历史',
    clearHistory: '清空历史',
    clearHistoryConfirm: '确定要清空搜索历史吗？',
    clearHistorySuccess: '搜索历史已清空！',
    clearHistoryFail: '清空失败: {error}',
    use: '使用',
    time: '时间',
    resultCount: '结果数',
    refresh: '刷新',
    configLoaded: '已加载 {name} 配置模板',
    configLoadFail: '加载配置模板失败: {error}',
    resetChunk: '已恢复为默认参数',
    resetChunkFail: '获取默认参数失败',
    resetRetrieval: '检索参数已恢复为推荐默认值',
    inputQuery: '输入查询开始搜索',
    docNone: '暂无文档',
    docSize: '大小',
    docCreated: '创建时间',
    indexType: '索引类型',
    doc: '文档',
    vector: '向量',
    hybrid: '混合',
    keyword: '关键词',
    paragraph: '按段落切片',
    character: '按字符数切片',
    sentence: '按句子切片',
    custom: '自定义配置',
    common: '通用文档',
    long: '长文本',
    dialog: '对话文本',
    tech: '技术文档',
    news: '新闻文章',
    minChunk: '最小块长度',
    maxChunk: '最大块长度',
    merge: '合并短块',
    mergeThreshold: '合并阈值',
    preserve: '保留格式',
    dedup: '去重',
    contextWindow: '上下文窗口',
    retrievalStrategy: '检索策略',
    similarity: '相似度阈值',
    topK: 'Top K',
    enhanced: '增强搜索',
    basic: '基础搜索',
    useEnhanced: '使用混合检索（向量+关键词）',
    minChunkLengthMsg: '最小块长度应在5-100之间',
    maxChunkLengthMsg: '最大块长度应在1000-5000之间',
    chunkSizeMsg: '块大小应在100-3000之间',
    mergeThresholdMsg: '合并阈值应在0.1-0.8之间',
    topKMsg: 'Top K应在1-20之间',
    // 参数说明
    splitMethodTip: '选择文本切片方式。paragraph适合结构化文档，character适合长文本，sentence适合对话。默认：paragraph',
    configTemplateTip: '快速应用预设配置',
    minChunkTip: '过滤过短的文本块，提高检索质量。建议5-100，默认20。',
    maxChunkTip: '超过此长度的文本块会被分割。建议1000-5000，默认3000。',
  },
  en: {
    title: 'System Settings',
    backHome: 'Back to Home',
    globalParams: 'Global Parameters',
    llmProvider: 'LLM Provider',
    apiKey: 'API Key',
    modelName: 'Model Name',
    apiUrl: 'API URL',
    localModelDir: 'Local Model Directory',
    preferLocalModel: 'Prefer Local Model',
    save: 'Save',
    restore: 'Restore',
    reset: 'Reset Default',
    configLoaded: 'Config loaded',
    saveSuccess: 'Saved successfully',
    saveFail: 'Save failed',
    paramInvalid: 'Parameter validation failed:',
    langSwitch: '中文',
    uploading: 'Uploading document...',
    uploadSuccess: 'Document added! ID: {id}',
    uploadFail: 'Add failed: {error}',
    requestFail: 'Request failed: {error}',
    delConfirm: 'Are you sure to delete this document?',
    delSuccess: 'Document deleted!',
    delFail: 'Delete failed: {error}',
    searchEmpty: 'Please enter a search query',
    searching: 'Searching...',
    searchFail: 'Search failed: {error}',
    noResult: 'No results found',
    noExport: 'No search results to export',
    exportSuccess: 'Results exported to: {file}',
    exportFail: 'Export failed: {error}',
    loading: 'Processing...',
    addSuccess: 'Document added!',
    clearConfirm: 'Are you sure to clear the whole knowledge base? This cannot be undone!',
    clearing: 'Clearing knowledge base...',
    clearSuccess: 'Knowledge base cleared!',
    clearFail: 'Clear failed: {error}',
    historyFail: 'Load history failed: {error}',
    noHistory: 'No search history',
    searchHistory: 'Search History',
    clearHistory: 'Clear History',
    clearHistoryConfirm: 'Are you sure to clear search history?',
    clearHistorySuccess: 'Search history cleared!',
    clearHistoryFail: 'Clear failed: {error}',
    use: 'Use',
    time: 'Time',
    resultCount: 'Results',
    refresh: 'Refresh',
    configLoaded: 'Loaded {name} config template',
    configLoadFail: 'Load config template failed: {error}',
    resetChunk: 'Restored to default parameters',
    resetChunkFail: 'Get default parameters failed',
    resetRetrieval: 'Retrieval params restored to recommended defaults',
    inputQuery: 'Enter a query to search',
    docNone: 'No documents',
    docSize: 'Size',
    docCreated: 'Created at',
    indexType: 'Index type',
    doc: 'Document',
    vector: 'Vector',
    hybrid: 'Hybrid',
    keyword: 'Keyword',
    paragraph: 'Paragraph split',
    character: 'Character split',
    sentence: 'Sentence split',
    custom: 'Custom config',
    common: 'General doc',
    long: 'Long text',
    dialog: 'Dialog',
    tech: 'Tech doc',
    news: 'News',
    minChunk: 'Min chunk length',
    maxChunk: 'Max chunk length',
    merge: 'Merge short chunks',
    mergeThreshold: 'Merge threshold',
    preserve: 'Preserve formatting',
    dedup: 'Deduplication',
    contextWindow: 'Context window',
    retrievalStrategy: 'Retrieval strategy',
    similarity: 'Similarity threshold',
    topK: 'Top K',
    enhanced: 'Enhanced search',
    basic: 'Basic search',
    useEnhanced: 'Use hybrid retrieval (vector+keyword)',
    minChunkLengthMsg: 'Min chunk length should be 5-100',
    maxChunkLengthMsg: 'Max chunk length should be 1000-5000',
    chunkSizeMsg: 'Chunk size should be 100-3000',
    mergeThresholdMsg: 'Merge threshold should be 0.1-0.8',
    topKMsg: 'Top K should be 1-20',
    // 参数说明
    splitMethodTip: 'Choose text splitting method. paragraph for structured docs, character for long text, sentence for dialogs. Default: paragraph',
    configTemplateTip: 'Quickly apply preset config',
    minChunkTip: 'Filter out short chunks to improve retrieval quality. Suggest 5-100, default 20.',
    maxChunkTip: 'Chunks longer than this will be split. Suggest 1000-5000, default 3000.',
  }
};

// 知识库管理页相关
Object.assign(i18nDict.zh, {
  kbManage: '知识库管理',
  docManage: '文档管理',
  addDoc: '添加文档',
  upload: '上传',
  docList: '文档列表',
  delete: '删除',
  search: '搜索',
  export: '导出',
  exportJson: '导出JSON',
  exportTxt: '导出TXT',
  exportCsv: '导出CSV',
  searchHistory: '搜索历史',
  clearHistory: '清空历史',
  kbSearch: '知识库搜索',
  enhancedSearch: '增强知识库搜索',
  searchResult: '搜索结果',
  noDoc: '暂无文档',
  noResult: '未找到相关结果',
  confirmDelete: '确定要删除这个文档吗？',
  confirmClear: '确定要清空整个知识库吗？此操作不可恢复！',
  confirmClearHistory: '确定要清空搜索历史吗？',
  loading: '处理中...',
  addSuccess: '文档添加成功！',
  delSuccess: '文档删除成功！',
  clearSuccess: '知识库已清空！',
  clearHistorySuccess: '搜索历史已清空！',
});
Object.assign(i18nDict.en, {
  kbManage: 'Knowledge Base Management',
  docManage: 'Document Management',
  addDoc: 'Add Document',
  upload: 'Upload',
  docList: 'Document List',
  delete: 'Delete',
  search: 'Search',
  export: 'Export',
  exportJson: 'Export JSON',
  exportTxt: 'Export TXT',
  exportCsv: 'Export CSV',
  searchHistory: 'Search History',
  clearHistory: 'Clear History',
  kbSearch: 'Knowledge Base Search',
  enhancedSearch: 'Enhanced Knowledge Base Search',
  searchResult: 'Search Results',
  noDoc: 'No documents',
  noResult: 'No results found',
  confirmDelete: 'Are you sure you want to delete this document?',
  confirmClear: 'Are you sure you want to clear the entire knowledge base? This action cannot be undone!',
  confirmClearHistory: 'Are you sure you want to clear the search history?',
  loading: 'Processing...',
  addSuccess: 'Document added successfully!',
  delSuccess: 'Document deleted successfully!',
  clearSuccess: 'Knowledge base cleared!',
  clearHistorySuccess: 'Search history cleared!',
});

let currentLang = 'zh';

function setLang(lang) {
  currentLang = lang;
  // 替换页面主要文本
  document.getElementById('i18n-title').textContent = i18nDict[lang].title;
  document.getElementById('i18n-back-home').textContent = i18nDict[lang].backHome;
  document.getElementById('i18n-global-params').textContent = i18nDict[lang].globalParams;
  document.getElementById('i18n-llm-provider').textContent = i18nDict[lang].llmProvider;
  document.getElementById('i18n-api-key').textContent = i18nDict[lang].apiKey;
  document.getElementById('i18n-model-name').textContent = i18nDict[lang].modelName;
  document.getElementById('i18n-api-url').textContent = i18nDict[lang].apiUrl;
  document.getElementById('i18n-local-model-dir').textContent = i18nDict[lang].localModelDir;
  document.getElementById('i18n-prefer-local-model').textContent = i18nDict[lang].preferLocalModel;
  document.getElementById('i18n-save').textContent = i18nDict[lang].save;
  document.getElementById('i18n-restore').textContent = i18nDict[lang].restore;
  document.getElementById('i18n-reset').textContent = i18nDict[lang].reset;
  document.getElementById('i18n-lang-switch').textContent = i18nDict[lang].langSwitch;
}

function toggleLang() {
  setLang(currentLang === 'zh' ? 'en' : 'zh');
}

document.addEventListener('DOMContentLoaded', function() {
  setLang(currentLang);
}); 